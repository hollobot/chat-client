appId: com.electron.app          # 应用程序唯一标识符
productName: SwiftChat           # 应用程序产品名称
copyright: "Copyright © 2025 hello"  # 版权信息
directories:
    buildResources: build        # 构建资源目录，存放图标等静态资源
files:
    - "!**/.vscode/*"           # 排除 VSCode 配置文件
    - "!src/*"                  # 排除源代码文件
    - "!electron.vite.config.{js,ts,mjs,cjs}"  # 排除 Vite 配置文件
    - "!{.eslintignore,.eslintrc.cjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}"  # 排除开发工具配置和文档
    - "!{.env,.env.*,.npmrc,pnpm-lock.yaml}"  # 排除环境变量和包管理配置
asarUnpack:
    - resources/**              # 指定不打包到 ASAR 文件中的资源
win:
    executableName: SwiftChat   # Windows 可执行文件名
    target: nsis                # 使用 NSIS 安装包格式
    icon: build/icon-512.png        # 应用程序图标
    publisherName: "hello"      # 发布者名称
nsis:
    oneClick: false             # 不使用一键安装
    allowElevation: true        # 允许提升权限
    allowToChangeInstallationDirectory: true  # 允许用户更改安装目录
    installerLanguages:         # 安装程序支持的语言
        - zh_CN                 # 简体中文
        - en_US                 # 英语
mac:
    notarize: false             # 不进行公证（需要 Apple 开发者账户）
dmg:
    artifactName: ${name}-${version}.${ext}  # 生成文件的命名模式
linux:
    target:                     # 支持的 Linux 打包格式
        - AppImage              # 便携式应用程序格式
        - snap                  # Ubuntu Snap 包
        - deb                   # Debian 包格式
    maintainer: electronjs.org  # 维护者信息
    category: Utility           # 应用程序类别
appImage:
    artifactName: ${name}-${version}.${ext}  # AppImage 文件命名
npmRebuild: false               # 不重新构建原生模块
electronDownload:
    mirror: https://npmmirror.com/mirrors/electron/  # 使用国内镜像下载 Electron